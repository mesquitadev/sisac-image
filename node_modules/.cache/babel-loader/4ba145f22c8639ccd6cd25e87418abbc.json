{"ast":null,"code":"var _jsxFileName = \"/Users/engeplusistemasisac/Documents/projetos/sisac-image/src/pages/Atendimento/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef, useCallback } from \"react\";\nimport { Box, Flex, Center, Grid, Heading, Stack, Image, Text, HStack } from \"@chakra-ui/react\";\nimport { Row, PageHeader, Descriptions, Button, Col, Divider, Space, Card, Empty } from \"antd\";\nimport Webcam from \"react-webcam\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { ImagePicker } from \"../../components\";\nimport api from \"../../services/api\";\nimport \"./styles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Atendimento = () => {\n  _s();\n\n  const history = useHistory();\n  const webcamRef = useRef(null);\n  const {\n    id\n  } = useParams();\n  const [selectedPaciente, setSelectedPaciente] = useState();\n  const [audio, setAudio] = useState(false);\n  const [images, setImages] = useState([]);\n  const [selectedImages, setSelectedImages] = useState([]);\n  useEffect(() => {\n    api.get(`paciente/${id}`).then(res => setSelectedPaciente(res.data)).catch(err => console.log(err));\n  }, [id, selectedPaciente]);\n  useEffect(() => {\n    console.log(\"selImages\", selectedImages);\n  }, [selectedImages]);\n  const capture = useCallback(() => {\n    var _webcamRef$current;\n\n    const imageSrc = (_webcamRef$current = webcamRef.current) === null || _webcamRef$current === void 0 ? void 0 : _webcamRef$current.getScreenshot();\n    setImages(img => [...img, imageSrc]);\n  }, [webcamRef]);\n\n  function handleSelectedImages(imgs) {\n    setSelectedImages(imgs);\n  }\n\n  function handleCreateReport() {\n    history.push(\"/laudo\");\n  }\n\n  return /*#__PURE__*/_jsxDEV(Row, {\n    span: 24,\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      gutter: [12, 12],\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        span: 12,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          title: \"Capturar Imagens\",\n          bodyStyle: {\n            padding: 0\n          },\n          children: [/*#__PURE__*/_jsxDEV(Webcam, {\n            audio: audio,\n            ref: webcamRef,\n            screenshotFormat: \"image/jpeg\",\n            width: \"100%\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Space, {\n            style: {\n              padding: 10\n            },\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => capture(),\n              children: \"Capturar Imagem\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => capture(),\n              children: \"Gravar V\\xEDdeo \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => handleCreateReport(),\n              children: \"Emitir Laudo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        span: 12,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          title: \"Imagens Capturadas\",\n          bodyStyle: {\n            overflowY: \"scroll\",\n            maxHeight: \"500px\"\n          },\n          children: images.length > 1 ? /*#__PURE__*/_jsxDEV(ImagePicker, {\n            images: images.map((image, i) => ({\n              src: image,\n              value: i\n            })),\n            multiple: true,\n            onPick: selImgs => handleSelectedImages(selImgs)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(Empty, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Atendimento, \"Ra/PGCI5PhnsLlFjp0ZbWgn5uts=\", false, function () {\n  return [useHistory, useParams];\n});\n\n_c = Atendimento;\nexport default Atendimento;\n\nvar _c;\n\n$RefreshReg$(_c, \"Atendimento\");","map":{"version":3,"sources":["/Users/engeplusistemasisac/Documents/projetos/sisac-image/src/pages/Atendimento/index.jsx"],"names":["React","useState","useEffect","useRef","useCallback","Box","Flex","Center","Grid","Heading","Stack","Image","Text","HStack","Row","PageHeader","Descriptions","Button","Col","Divider","Space","Card","Empty","Webcam","useParams","useHistory","ImagePicker","api","Atendimento","history","webcamRef","id","selectedPaciente","setSelectedPaciente","audio","setAudio","images","setImages","selectedImages","setSelectedImages","get","then","res","data","catch","err","console","log","capture","imageSrc","current","getScreenshot","img","handleSelectedImages","imgs","handleCreateReport","push","padding","overflowY","maxHeight","length","map","image","i","src","value","selImgs"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from \"react\"\nimport {\n  Box,\n  Flex,\n  Center,\n  Grid,\n  Heading,\n  Stack,\n  Image,\n  Text,\n  HStack,\n} from \"@chakra-ui/react\"\nimport {\n  Row,\n  PageHeader,\n  Descriptions,\n  Button,\n  Col,\n  Divider,\n  Space,\n  Card,\n  Empty,\n} from \"antd\"\nimport Webcam from \"react-webcam\"\nimport { useParams, useHistory } from \"react-router-dom\"\nimport { ImagePicker } from \"../../components\"\nimport api from \"../../services/api\"\nimport \"./styles.css\"\n\nconst Atendimento = () => {\n  const history = useHistory()\n  const webcamRef = useRef(null)\n  const { id } = useParams()\n  const [selectedPaciente, setSelectedPaciente] = useState()\n  const [audio, setAudio] = useState(false)\n  const [images, setImages] = useState([])\n  const [selectedImages, setSelectedImages] = useState([])\n\n  useEffect(() => {\n    api\n      .get(`paciente/${id}`)\n      .then((res) => setSelectedPaciente(res.data))\n      .catch((err) => console.log(err))\n  }, [id, selectedPaciente])\n\n  useEffect(() => {\n    console.log(\"selImages\", selectedImages)\n  }, [selectedImages])\n\n  const capture = useCallback(() => {\n    const imageSrc = webcamRef.current?.getScreenshot()\n    setImages((img) => [...img, imageSrc])\n  }, [webcamRef])\n\n  function handleSelectedImages(imgs) {\n    setSelectedImages(imgs)\n  }\n  function handleCreateReport() {\n    history.push(\"/laudo\")\n  }\n\n  return (\n    <Row span={24}>\n      <Row gutter={[12, 12]}>\n        <Col span={12}>\n          <Card title=\"Capturar Imagens\" bodyStyle={{ padding: 0 }}>\n            <Webcam\n              audio={audio}\n              ref={webcamRef}\n              screenshotFormat=\"image/jpeg\"\n              width=\"100%\"\n            />\n            <Space style={{ padding: 10 }}>\n              <Button onClick={() => capture()}>Capturar Imagem</Button>\n              <Button onClick={() => capture()}>Gravar Vídeo </Button>\n              <Button onClick={() => handleCreateReport()}>Emitir Laudo</Button>\n            </Space>\n          </Card>\n        </Col>\n        <Col span={12}>\n          <Card\n            title=\"Imagens Capturadas\"\n            bodyStyle={{ overflowY: \"scroll\", maxHeight: \"500px\" }}\n          >\n            {images.length > 1 ? (\n              <ImagePicker\n                images={images.map((image, i) => ({\n                  src: image,\n                  value: i,\n                }))}\n                multiple\n                onPick={(selImgs) => handleSelectedImages(selImgs)}\n              />\n            ) : (\n              <Empty />\n            )}\n          </Card>\n        </Col>\n      </Row>\n    </Row>\n  )\n}\n\nexport default Atendimento\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/engeplusistemasisac/Documents/Documentos - MacBook Air de Engeplus/projetos/sisac-image/src/pages/Atendimento/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect, useRef, useState } from \"react\";\nimport { Button, Card, Col, Descriptions, Empty, Row, Space, Tooltip, Skeleton, message, Dropdown, Menu, Select } from \"antd\";\nimport { CameraOutlined, VideoCameraOutlined, FileTextOutlined, InfoCircleOutlined } from \"@ant-design/icons\";\nimport Webcam from \"react-webcam\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { ImagePicker } from \"../../components\";\nimport api from \"../../services/api\";\nimport \"./styles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Atendimento = () => {\n  _s();\n\n  const history = useHistory();\n  const webcamRef = useRef(null);\n  const {\n    id\n  } = useParams();\n  const {\n    Option\n  } = Select;\n  const [selectedPaciente, setSelectedPaciente] = useState();\n  const [loading, setLoading] = useState(false);\n  const [audio, setAudio] = useState(false);\n  const [images, setImages] = useState([]);\n  const [selectedImages, setSelectedImages] = useState([]);\n  const [deviceId, setDeviceId] = React.useState({});\n  const [devices, setDevices] = React.useState([]);\n  useEffect(() => {\n    async function getItems() {\n      try {\n        const {\n          data\n        } = await api.get(`/paciente/${id}`);\n        setSelectedPaciente(data);\n        setLoading(false);\n      } catch (error) {\n        message.error(\"Ocorreu um erro ao buscar os dados do paciente\");\n      }\n    } // eslint-disable-next-line no-console\n\n\n    getItems().then(r => console.log(\"error\", r));\n  }, []);\n  const handleDevices = React.useCallback(mediaDevices => setDevices(mediaDevices.filter(({\n    kind\n  }) => kind === \"videoinput\")), [setDevices]);\n  React.useEffect(() => {\n    navigator.mediaDevices.enumerateDevices().then(handleDevices);\n  }, [handleDevices]);\n  const capture = useCallback(() => {\n    var _webcamRef$current;\n\n    const imageSrc = (_webcamRef$current = webcamRef.current) === null || _webcamRef$current === void 0 ? void 0 : _webcamRef$current.getScreenshot();\n    setImages(img => [...img, imageSrc]);\n  }, [webcamRef]);\n\n  function handleSelectedImages(imgs) {\n    setSelectedImages(imgs);\n  }\n\n  function handleCreateReport() {\n    history.push({\n      pathname: \"/laudo\",\n      state: {\n        images: selectedImages\n      }\n    });\n  }\n\n  const menu = /*#__PURE__*/_jsxDEV(Menu, {\n    onClick: () => handleCreateReport(),\n    children: [/*#__PURE__*/_jsxDEV(Menu.Item, {\n      children: \"VideoLaparoscopia\"\n    }, \"1\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Menu.Item, {\n      children: \"Endoscopia\"\n    }, \"2\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(Row, {\n    span: 24,\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      span: 24,\n      children: /*#__PURE__*/_jsxDEV(Descriptions, {\n        title: \"Dados do Paciente\",\n        extra: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          children: \"Salvar para Capturar Posterior\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 18\n        }, this),\n        children: loading ? /*#__PURE__*/_jsxDEV(Skeleton, {\n          paragraph: {\n            rows: 2\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Descriptions.Item, {\n            label: \"Nome\",\n            children: \"Paulo Victor\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Descriptions.Item, {\n            label: \"Data de Nascimento\",\n            children: \"10/05/1997\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Descriptions.Item, {\n            label: \"Telefone\",\n            children: \"(98) 9 9174-1075\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      gutter: [24],\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        span: 12,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          title: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Captura\", /*#__PURE__*/_jsxDEV(Tooltip, {\n              title: \"Captura de Imagens do Equipamento\",\n              placement: \"right\",\n              children: /*#__PURE__*/_jsxDEV(InfoCircleOutlined, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 15\n          }, this),\n          bodyStyle: {\n            padding: 0\n          },\n          children: [devices.map((device, key) => /*#__PURE__*/_jsxDEV(Select, {\n            style: {\n              width: 120\n            },\n            children: /*#__PURE__*/_jsxDEV(Option, {\n              value: device.deviceId,\n              children: device.deviceId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(Webcam, {\n            audio: audio,\n            ref: webcamRef,\n            videoConstraints: {\n              deviceId\n            },\n            screenshotFormat: \"image/jpeg\",\n            width: \"100%\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Space, {\n            style: {\n              padding: 10\n            },\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              icon: /*#__PURE__*/_jsxDEV(CameraOutlined, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 23\n              }, this),\n              type: \"primary\",\n              onClick: () => capture(),\n              children: \"Capturar Imagem\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              icon: /*#__PURE__*/_jsxDEV(VideoCameraOutlined, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 23\n              }, this),\n              type: \"danger\",\n              onClick: () => capture(),\n              children: \"Gravar V\\xEDdeo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n              overlay: menu,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                icon: /*#__PURE__*/_jsxDEV(FileTextOutlined, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 155,\n                  columnNumber: 31\n                }, this),\n                onClick: () => capture(),\n                children: \"Emitir Laudo\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        span: 12,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          title: \"Imagens Capturadas\",\n          bodyStyle: {\n            overflowY: \"scroll\",\n            maxHeight: \"500px\"\n          },\n          children: images.length >= 1 ? /*#__PURE__*/_jsxDEV(ImagePicker, {\n            images: images.map((image, i) => ({\n              src: image,\n              value: i\n            })),\n            multiple: true,\n            onPick: selImgs => handleSelectedImages(selImgs)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(Empty, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Atendimento, \"kQwh2H7+WUbRGMCPHxenVZ4+5vY=\", false, function () {\n  return [useHistory, useParams];\n});\n\n_c = Atendimento;\nexport default Atendimento;\n\nvar _c;\n\n$RefreshReg$(_c, \"Atendimento\");","map":{"version":3,"sources":["/Users/engeplusistemasisac/Documents/Documentos - MacBook Air de Engeplus/projetos/sisac-image/src/pages/Atendimento/index.jsx"],"names":["React","useCallback","useEffect","useRef","useState","Button","Card","Col","Descriptions","Empty","Row","Space","Tooltip","Skeleton","message","Dropdown","Menu","Select","CameraOutlined","VideoCameraOutlined","FileTextOutlined","InfoCircleOutlined","Webcam","useHistory","useParams","ImagePicker","api","Atendimento","history","webcamRef","id","Option","selectedPaciente","setSelectedPaciente","loading","setLoading","audio","setAudio","images","setImages","selectedImages","setSelectedImages","deviceId","setDeviceId","devices","setDevices","getItems","data","get","error","then","r","console","log","handleDevices","mediaDevices","filter","kind","navigator","enumerateDevices","capture","imageSrc","current","getScreenshot","img","handleSelectedImages","imgs","handleCreateReport","push","pathname","state","menu","rows","padding","map","device","key","width","overflowY","maxHeight","length","image","i","src","value","selImgs"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useRef, useState } from \"react\"\nimport {\n  Button,\n  Card,\n  Col,\n  Descriptions,\n  Empty,\n  Row,\n  Space,\n  Tooltip,\n  Skeleton,\n  message,\n  Dropdown,\n  Menu,\n  Select,\n} from \"antd\"\nimport {\n  CameraOutlined,\n  VideoCameraOutlined,\n  FileTextOutlined,\n  InfoCircleOutlined,\n} from \"@ant-design/icons\"\nimport Webcam from \"react-webcam\"\nimport { useHistory, useParams } from \"react-router-dom\"\nimport { ImagePicker } from \"../../components\"\nimport api from \"../../services/api\"\nimport \"./styles.css\"\n\nconst Atendimento = () => {\n  const history = useHistory()\n  const webcamRef = useRef(null)\n  const { id } = useParams()\n  const { Option } = Select\n  const [selectedPaciente, setSelectedPaciente] = useState()\n  const [loading, setLoading] = useState(false)\n  const [audio, setAudio] = useState(false)\n  const [images, setImages] = useState([])\n  const [selectedImages, setSelectedImages] = useState([])\n  const [deviceId, setDeviceId] = React.useState({})\n  const [devices, setDevices] = React.useState([])\n\n  useEffect(() => {\n    async function getItems() {\n      try {\n        const { data } = await api.get(`/paciente/${id}`)\n        setSelectedPaciente(data)\n        setLoading(false)\n      } catch (error) {\n        message.error(\"Ocorreu um erro ao buscar os dados do paciente\")\n      }\n    }\n    // eslint-disable-next-line no-console\n    getItems().then((r) => console.log(\"error\", r))\n  }, [])\n\n  const handleDevices = React.useCallback(\n    (mediaDevices) =>\n      setDevices(mediaDevices.filter(({ kind }) => kind === \"videoinput\")),\n    [setDevices]\n  )\n\n  React.useEffect(() => {\n    navigator.mediaDevices.enumerateDevices().then(handleDevices)\n  }, [handleDevices])\n\n  const capture = useCallback(() => {\n    const imageSrc = webcamRef.current?.getScreenshot()\n    setImages((img) => [...img, imageSrc])\n  }, [webcamRef])\n\n  function handleSelectedImages(imgs) {\n    setSelectedImages(imgs)\n  }\n\n  function handleCreateReport() {\n    history.push({\n      pathname: \"/laudo\",\n      state: { images: selectedImages },\n    })\n  }\n\n  const menu = (\n    <Menu onClick={() => handleCreateReport()}>\n      <Menu.Item key=\"1\">VideoLaparoscopia</Menu.Item>\n      <Menu.Item key=\"2\">Endoscopia</Menu.Item>\n    </Menu>\n  )\n\n  return (\n    <Row span={24}>\n      <Row span={24}>\n        <Descriptions\n          title=\"Dados do Paciente\"\n          extra={<Button type=\"primary\">Salvar para Capturar Posterior</Button>}\n        >\n          {loading ? (\n            <Skeleton paragraph={{ rows: 2 }} />\n          ) : (\n            <>\n              <Descriptions.Item label=\"Nome\">Paulo Victor</Descriptions.Item>\n              <Descriptions.Item label=\"Data de Nascimento\">\n                10/05/1997\n              </Descriptions.Item>\n              <Descriptions.Item label=\"Telefone\">\n                (98) 9 9174-1075\n              </Descriptions.Item>\n            </>\n          )}\n        </Descriptions>\n      </Row>\n      <Row gutter={[24]}>\n        <Col span={12}>\n          <Card\n            title={\n              <span>\n                Captura\n                <Tooltip\n                  title=\"Captura de Imagens do Equipamento\"\n                  placement=\"right\"\n                >\n                  <InfoCircleOutlined />\n                </Tooltip>\n              </span>\n            }\n            bodyStyle={{ padding: 0 }}\n          >\n            {devices.map((device, key) => (\n              <Select  style={{ width: 120 }}>\n                <Option value={device.deviceId}>{device.deviceId}</Option>\n              </Select>\n            ))}\n            <Webcam\n              audio={audio}\n              ref={webcamRef}\n              videoConstraints={{ deviceId }}\n              screenshotFormat=\"image/jpeg\"\n              width=\"100%\"\n            />\n            <Space style={{ padding: 10 }}>\n              <Button\n                icon={<CameraOutlined />}\n                type=\"primary\"\n                onClick={() => capture()}\n              >\n                Capturar Imagem\n              </Button>\n              <Button\n                icon={<VideoCameraOutlined />}\n                type=\"danger\"\n                onClick={() => capture()}\n              >\n                Gravar Vídeo\n              </Button>\n              <Dropdown overlay={menu}>\n                <Button icon={<FileTextOutlined />} onClick={() => capture()}>\n                  Emitir Laudo\n                </Button>\n              </Dropdown>\n            </Space>\n          </Card>\n        </Col>\n        <Col span={12}>\n          <Card\n            title=\"Imagens Capturadas\"\n            bodyStyle={{ overflowY: \"scroll\", maxHeight: \"500px\" }}\n          >\n            {images.length >= 1 ? (\n              <ImagePicker\n                images={images.map((image, i) => ({\n                  src: image,\n                  value: i,\n                }))}\n                multiple\n                onPick={(selImgs) => handleSelectedImages(selImgs)}\n              />\n            ) : (\n              <Empty />\n            )}\n          </Card>\n        </Col>\n      </Row>\n    </Row>\n  )\n}\n\nexport default Atendimento\n"]},"metadata":{},"sourceType":"module"}
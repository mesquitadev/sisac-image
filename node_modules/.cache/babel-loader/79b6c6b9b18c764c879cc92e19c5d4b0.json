{"ast":null,"code":"var _jsxFileName = \"/Users/engeplusistemasisac/Documents/Documentos - MacBook Air de Engeplus/projetos/sisac-image/src/components/SelectImage/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useState, useCallback } from \"react\";\nimport { Map } from \"immutable\";\nimport { Space } from \"antd\";\nimport Image from \"../Image\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ImagePicker = ({\n  images,\n  inline\n}) => {\n  _s();\n\n  const [picked, setPicked] = useState(Map());\n  const handleImageClick = useCallback(image => {\n    const {\n      multiple,\n      onPick\n    } = this.props;\n    const pickedImage = multiple ? this.state.picked : Map();\n    const newerPickedImage = pickedImage.has(image.value) ? pickedImage.delete(image.value) : pickedImage.set(image.value, image.src);\n    this.setState({\n      picked: newerPickedImage\n    });\n    const pickedImageToArray = [];\n    newerPickedImage.map((img, i) => pickedImageToArray.push({\n      src: img,\n      value: i\n    }));\n    onPick(multiple ? pickedImageToArray : pickedImageToArray[0]);\n  }, []);\n\n  const renderImage = (image, i) => /*#__PURE__*/_jsxDEV(Image, {\n    src: image.src,\n    isSelected: this.state.picked.has(image.value),\n    onImageClick: () => handleImageClick(image)\n  }, i, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n\n  return inline ? /*#__PURE__*/_jsxDEV(Space, {\n    className: \"image_picker\",\n    children: images.map(renderImage)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(Space, {\n    size: [8, 16],\n    wrap: true,\n    className: \"image_picker\",\n    children: images.map(renderImage)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ImagePicker, \"kNwp/I3AslorRdJ4BBmBVPoY6Hk=\");\n\n_c = ImagePicker;\nexport default ImagePicker;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImagePicker\");","map":{"version":3,"sources":["/Users/engeplusistemasisac/Documents/Documentos - MacBook Air de Engeplus/projetos/sisac-image/src/components/SelectImage/index.jsx"],"names":["React","Component","useState","useCallback","Map","Space","Image","ImagePicker","images","inline","picked","setPicked","handleImageClick","image","multiple","onPick","props","pickedImage","state","newerPickedImage","has","value","delete","set","src","setState","pickedImageToArray","map","img","i","push","renderImage"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,WAArC,QAAwD,OAAxD;AACA,SAASC,GAAT,QAAoB,WAApB;AACA,SAASC,KAAT,QAAsB,MAAtB;AACA,OAAOC,KAAP,MAAkB,UAAlB;;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAAD,KAAwB;AAAA;;AAC1C,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAACE,GAAG,EAAJ,CAApC;AAEA,QAAMQ,gBAAgB,GAAGT,WAAW,CAAEU,KAAD,IAAW;AAC9C,UAAM;AAAEC,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,QAAuB,KAAKC,KAAlC;AACA,UAAMC,WAAW,GAAGH,QAAQ,GAAG,KAAKI,KAAL,CAAWR,MAAd,GAAuBN,GAAG,EAAtD;AACA,UAAMe,gBAAgB,GAAGF,WAAW,CAACG,GAAZ,CAAgBP,KAAK,CAACQ,KAAtB,IACrBJ,WAAW,CAACK,MAAZ,CAAmBT,KAAK,CAACQ,KAAzB,CADqB,GAErBJ,WAAW,CAACM,GAAZ,CAAgBV,KAAK,CAACQ,KAAtB,EAA6BR,KAAK,CAACW,GAAnC,CAFJ;AAIA,SAAKC,QAAL,CAAc;AAAEf,MAAAA,MAAM,EAAES;AAAV,KAAd;AAEA,UAAMO,kBAAkB,GAAG,EAA3B;AACAP,IAAAA,gBAAgB,CAACQ,GAAjB,CAAqB,CAACC,GAAD,EAAMC,CAAN,KACnBH,kBAAkB,CAACI,IAAnB,CAAwB;AAAEN,MAAAA,GAAG,EAAEI,GAAP;AAAYP,MAAAA,KAAK,EAAEQ;AAAnB,KAAxB,CADF;AAIAd,IAAAA,MAAM,CAACD,QAAQ,GAAGY,kBAAH,GAAwBA,kBAAkB,CAAC,CAAD,CAAnD,CAAN;AACD,GAfmC,EAejC,EAfiC,CAApC;;AAiBA,QAAMK,WAAW,GAAG,CAAClB,KAAD,EAAQgB,CAAR,kBAClB,QAAC,KAAD;AACE,IAAA,GAAG,EAAEhB,KAAK,CAACW,GADb;AAEE,IAAA,UAAU,EAAE,KAAKN,KAAL,CAAWR,MAAX,CAAkBU,GAAlB,CAAsBP,KAAK,CAACQ,KAA5B,CAFd;AAGE,IAAA,YAAY,EAAE,MAAMT,gBAAgB,CAACC,KAAD;AAHtC,KAIOgB,CAJP;AAAA;AAAA;AAAA;AAAA,UADF;;AAQA,SAAOpB,MAAM,gBACX,QAAC,KAAD;AAAO,IAAA,SAAS,EAAC,cAAjB;AAAA,cAAiCD,MAAM,CAACmB,GAAP,CAAWI,WAAX;AAAjC;AAAA;AAAA;AAAA;AAAA,UADW,gBAGX,QAAC,KAAD;AAAO,IAAA,IAAI,EAAE,CAAC,CAAD,EAAI,EAAJ,CAAb;AAAsB,IAAA,IAAI,MAA1B;AAA2B,IAAA,SAAS,EAAC,cAArC;AAAA,cACGvB,MAAM,CAACmB,GAAP,CAAWI,WAAX;AADH;AAAA;AAAA;AAAA;AAAA,UAHF;AAOD,CAnCD;;GAAMxB,W;;KAAAA,W;AAqCN,eAAeA,WAAf","sourcesContent":["import React, { Component, useState, useCallback } from \"react\"\nimport { Map } from \"immutable\"\nimport { Space } from \"antd\"\nimport Image from \"../Image\"\n\nconst ImagePicker = ({ images, inline }) => {\n  const [picked, setPicked] = useState(Map())\n\n  const handleImageClick = useCallback((image) => {\n    const { multiple, onPick } = this.props\n    const pickedImage = multiple ? this.state.picked : Map()\n    const newerPickedImage = pickedImage.has(image.value)\n      ? pickedImage.delete(image.value)\n      : pickedImage.set(image.value, image.src)\n\n    this.setState({ picked: newerPickedImage })\n\n    const pickedImageToArray = []\n    newerPickedImage.map((img, i) =>\n      pickedImageToArray.push({ src: img, value: i })\n    )\n\n    onPick(multiple ? pickedImageToArray : pickedImageToArray[0])\n  }, [])\n\n  const renderImage = (image, i) => (\n    <Image\n      src={image.src}\n      isSelected={this.state.picked.has(image.value)}\n      onImageClick={() => handleImageClick(image)}\n      key={i}\n    />\n  )\n  return inline ? (\n    <Space className=\"image_picker\">{images.map(renderImage)}</Space>\n  ) : (\n    <Space size={[8, 16]} wrap className=\"image_picker\">\n      {images.map(renderImage)}\n    </Space>\n  )\n}\n\nexport default ImagePicker\n"]},"metadata":{},"sourceType":"module"}
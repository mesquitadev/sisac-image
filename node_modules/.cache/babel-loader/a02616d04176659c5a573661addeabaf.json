{"ast":null,"code":"var _jsxFileName = \"/Users/engeplusistemasisac/Documents/projetos/sisac-image/src/pages/Atendimento/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef, useCallback } from \"react\";\nimport { Box, Flex, Center, Button, Grid, Heading, Stack, Image, Text, HStack } from \"@chakra-ui/react\";\nimport Webcam from \"react-webcam\";\nimport { useParams } from \"react-router-dom\";\nimport { ImagePicker } from \"../../components\";\nimport api from \"../../services/api\";\nimport \"./styles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Atendimento = () => {\n  _s();\n\n  const webcamRef = useRef(null);\n  const {\n    id\n  } = useParams();\n  const [selectedPaciente, setSelectedPaciente] = useState();\n  const [audio, setAudio] = useState(false);\n  const [images, setImages] = useState([]);\n  const [selectedImages, setSelectedImages] = useState([]);\n  useEffect(() => {\n    console.log(\"cpd\", selectedPaciente);\n    api.get(`paciente/${id}`).then(res => setSelectedPaciente(res.data.data)).catch(err => console.log(err));\n  }, [id]);\n  useEffect(() => {\n    console.log(\"selImages\", selectedImages);\n  }, [selectedImages]);\n  const capture = useCallback(() => {\n    var _webcamRef$current;\n\n    const imageSrc = (_webcamRef$current = webcamRef.current) === null || _webcamRef$current === void 0 ? void 0 : _webcamRef$current.getScreenshot();\n    setImages(img => [...img, imageSrc]);\n  }, [webcamRef]);\n\n  function handleSelectedImages(imgs) {\n    setSelectedImages(imgs);\n  }\n\n  function handleCreateReport() {\n    console.log(\"report\", selectedImages);\n  }\n\n  function handleCleanImages() {\n    setImages([]);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    flex: \"1\",\n    w: \"100%\",\n    flexDir: \"row\",\n    p: \"6\",\n    mb: 6,\n    marginBottom: 5,\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      borderRadius: \"10\",\n      bg: \"gray.500\",\n      w: \"100%\",\n      mb: 6,\n      p: 2,\n      children: /*#__PURE__*/_jsxDEV(Text, {\n        fontWeight: \"sm\",\n        color: \"gray.300\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      templateColumns: \"repeat(2, 1fr)\",\n      gap: 5,\n      h: \"100%\",\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        borderRadius: \"10\",\n        children: [/*#__PURE__*/_jsxDEV(Webcam, {\n          audio: audio,\n          ref: webcamRef,\n          screenshotFormat: \"image/jpeg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(HStack, {\n          py: 2,\n          spacing: 4,\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => capture(),\n            children: \"Capturar \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => capture(),\n            children: \"Gravar V\\xEDdeo \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), selectedImages ? /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => handleCreateReport(),\n            children: \"Emitir Laudo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        bg: \"gray.500\",\n        borderRadius: \"10\",\n        children: /*#__PURE__*/_jsxDEV(ImagePicker, {\n          images: images.map((image, i) => ({\n            src: image,\n            value: i\n          })),\n          multiple: true,\n          onPick: selImgs => handleSelectedImages(selImgs)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Atendimento, \"Dsit49BQl56+E8ltFSP2eSBaRx4=\", false, function () {\n  return [useParams];\n});\n\n_c = Atendimento;\nexport default Atendimento;\n\nvar _c;\n\n$RefreshReg$(_c, \"Atendimento\");","map":{"version":3,"sources":["/Users/engeplusistemasisac/Documents/projetos/sisac-image/src/pages/Atendimento/index.jsx"],"names":["React","useState","useEffect","useRef","useCallback","Box","Flex","Center","Button","Grid","Heading","Stack","Image","Text","HStack","Webcam","useParams","ImagePicker","api","Atendimento","webcamRef","id","selectedPaciente","setSelectedPaciente","audio","setAudio","images","setImages","selectedImages","setSelectedImages","console","log","get","then","res","data","catch","err","capture","imageSrc","current","getScreenshot","img","handleSelectedImages","imgs","handleCreateReport","handleCleanImages","map","image","i","src","value","selImgs"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,EAA6CC,WAA7C,QAAgE,OAAhE;AACA,SACEC,GADF,EAEEC,IAFF,EAGEC,MAHF,EAIEC,MAJF,EAKEC,IALF,EAMEC,OANF,EAOEC,KAPF,EAQEC,KARF,EASEC,IATF,EAUEC,MAVF,QAWO,kBAXP;AAYA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,OAAOC,GAAP,MAAgB,oBAAhB;AACA,OAAO,cAAP;;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACxB,QAAMC,SAAS,GAAGjB,MAAM,CAAC,IAAD,CAAxB;AACA,QAAM;AAAEkB,IAAAA;AAAF,MAASL,SAAS,EAAxB;AACA,QAAM,CAACM,gBAAD,EAAmBC,mBAAnB,IAA0CtB,QAAQ,EAAxD;AACA,QAAM,CAACuB,KAAD,EAAQC,QAAR,IAAoBxB,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAM,CAACyB,MAAD,EAASC,SAAT,IAAsB1B,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAAC2B,cAAD,EAAiBC,iBAAjB,IAAsC5B,QAAQ,CAAC,EAAD,CAApD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd4B,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBT,gBAAnB;AAEAJ,IAAAA,GAAG,CACAc,GADH,CACQ,YAAWX,EAAG,EADtB,EAEGY,IAFH,CAESC,GAAD,IAASX,mBAAmB,CAACW,GAAG,CAACC,IAAJ,CAASA,IAAV,CAFpC,EAGGC,KAHH,CAGUC,GAAD,IAASP,OAAO,CAACC,GAAR,CAAYM,GAAZ,CAHlB;AAID,GAPQ,EAON,CAAChB,EAAD,CAPM,CAAT;AASAnB,EAAAA,SAAS,CAAC,MAAM;AACd4B,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBH,cAAzB;AACD,GAFQ,EAEN,CAACA,cAAD,CAFM,CAAT;AAIA,QAAMU,OAAO,GAAGlC,WAAW,CAAC,MAAM;AAAA;;AAChC,UAAMmC,QAAQ,yBAAGnB,SAAS,CAACoB,OAAb,uDAAG,mBAAmBC,aAAnB,EAAjB;AACAd,IAAAA,SAAS,CAAEe,GAAD,IAAS,CAAC,GAAGA,GAAJ,EAASH,QAAT,CAAV,CAAT;AACD,GAH0B,EAGxB,CAACnB,SAAD,CAHwB,CAA3B;;AAKA,WAASuB,oBAAT,CAA8BC,IAA9B,EAAoC;AAClCf,IAAAA,iBAAiB,CAACe,IAAD,CAAjB;AACD;;AACD,WAASC,kBAAT,GAA8B;AAC5Bf,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBH,cAAtB;AACD;;AAED,WAASkB,iBAAT,GAA6B;AAC3BnB,IAAAA,SAAS,CAAC,EAAD,CAAT;AACD;;AAED,sBACE,QAAC,GAAD;AAAK,IAAA,IAAI,EAAC,GAAV;AAAc,IAAA,CAAC,EAAC,MAAhB;AAAuB,IAAA,OAAO,EAAC,KAA/B;AAAqC,IAAA,CAAC,EAAC,GAAvC;AAA2C,IAAA,EAAE,EAAE,CAA/C;AAAkD,IAAA,YAAY,EAAE,CAAhE;AAAA,4BACE,QAAC,GAAD;AAAK,MAAA,YAAY,EAAC,IAAlB;AAAuB,MAAA,EAAE,EAAC,UAA1B;AAAqC,MAAA,CAAC,EAAC,MAAvC;AAA8C,MAAA,EAAE,EAAE,CAAlD;AAAqD,MAAA,CAAC,EAAE,CAAxD;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,UAAU,EAAC,IAAjB;AAAsB,QAAA,KAAK,EAAC;AAA5B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,IAAD;AAAM,MAAA,eAAe,EAAC,gBAAtB;AAAuC,MAAA,GAAG,EAAE,CAA5C;AAA+C,MAAA,CAAC,EAAC,MAAjD;AAAA,8BACE,QAAC,GAAD;AAAK,QAAA,YAAY,EAAC,IAAlB;AAAA,gCACE,QAAC,MAAD;AAAQ,UAAA,KAAK,EAAEH,KAAf;AAAsB,UAAA,GAAG,EAAEJ,SAA3B;AAAsC,UAAA,gBAAgB,EAAC;AAAvD;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,MAAD;AAAQ,UAAA,EAAE,EAAE,CAAZ;AAAe,UAAA,OAAO,EAAE,CAAxB;AAAA,kCACE,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAE,MAAMkB,OAAO,EAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAE,MAAMA,OAAO,EAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,EAGGV,cAAc,gBACb,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAE,MAAMiB,kBAAkB,EAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADa,GAEX,IALN;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAWE,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,UAAT;AAAoB,QAAA,YAAY,EAAC,IAAjC;AAAA,+BACE,QAAC,WAAD;AACE,UAAA,MAAM,EAAEnB,MAAM,CAACqB,GAAP,CAAW,CAACC,KAAD,EAAQC,CAAR,MAAe;AAAEC,YAAAA,GAAG,EAAEF,KAAP;AAAcG,YAAAA,KAAK,EAAEF;AAArB,WAAf,CAAX,CADV;AAEE,UAAA,QAAQ,MAFV;AAGE,UAAA,MAAM,EAAGG,OAAD,IAAaT,oBAAoB,CAACS,OAAD;AAH3C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAXF;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD,CA/DD;;GAAMjC,W;UAEWH,S;;;KAFXG,W;AAiEN,eAAeA,WAAf","sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from \"react\"\nimport {\n  Box,\n  Flex,\n  Center,\n  Button,\n  Grid,\n  Heading,\n  Stack,\n  Image,\n  Text,\n  HStack,\n} from \"@chakra-ui/react\"\nimport Webcam from \"react-webcam\"\nimport { useParams } from \"react-router-dom\"\nimport { ImagePicker } from \"../../components\"\nimport api from \"../../services/api\"\nimport \"./styles.css\"\n\nconst Atendimento = () => {\n  const webcamRef = useRef(null)\n  const { id } = useParams()\n  const [selectedPaciente, setSelectedPaciente] = useState()\n  const [audio, setAudio] = useState(false)\n  const [images, setImages] = useState([])\n  const [selectedImages, setSelectedImages] = useState([])\n\n  useEffect(() => {\n    console.log(\"cpd\", selectedPaciente)\n\n    api\n      .get(`paciente/${id}`)\n      .then((res) => setSelectedPaciente(res.data.data))\n      .catch((err) => console.log(err))\n  }, [id])\n\n  useEffect(() => {\n    console.log(\"selImages\", selectedImages)\n  }, [selectedImages])\n\n  const capture = useCallback(() => {\n    const imageSrc = webcamRef.current?.getScreenshot()\n    setImages((img) => [...img, imageSrc])\n  }, [webcamRef])\n\n  function handleSelectedImages(imgs) {\n    setSelectedImages(imgs)\n  }\n  function handleCreateReport() {\n    console.log(\"report\", selectedImages)\n  }\n\n  function handleCleanImages() {\n    setImages([])\n  }\n\n  return (\n    <Box flex=\"1\" w=\"100%\" flexDir=\"row\" p=\"6\" mb={6} marginBottom={5}>\n      <Box borderRadius=\"10\" bg=\"gray.500\" w=\"100%\" mb={6} p={2}>\n        <Text fontWeight=\"sm\" color=\"gray.300\" />\n      </Box>\n      <Grid templateColumns=\"repeat(2, 1fr)\" gap={5} h=\"100%\">\n        <Box borderRadius=\"10\">\n          <Webcam audio={audio} ref={webcamRef} screenshotFormat=\"image/jpeg\" />\n          <HStack py={2} spacing={4}>\n            <Button onClick={() => capture()}>Capturar </Button>\n            <Button onClick={() => capture()}>Gravar Vídeo </Button>\n            {selectedImages ? (\n              <Button onClick={() => handleCreateReport()}>Emitir Laudo</Button>\n            ) : null}\n          </HStack>\n        </Box>\n        <Flex bg=\"gray.500\" borderRadius=\"10\">\n          <ImagePicker\n            images={images.map((image, i) => ({ src: image, value: i }))}\n            multiple\n            onPick={(selImgs) => handleSelectedImages(selImgs)}\n          />\n        </Flex>\n      </Grid>\n    </Box>\n  )\n}\n\nexport default Atendimento\n"]},"metadata":{},"sourceType":"module"}